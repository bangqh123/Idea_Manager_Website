{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\FrontEnd\\\\src\\\\components\\\\DepartmentsManagement\\\\DepartmentsManagement.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableFooter from '@mui/material/TableFooter';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport TableHead from '@mui/material/TableHead';\nimport IconButton from '@mui/material/IconButton';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport { Outlet, useNavigate } from 'react-router-dom';\nimport { apiUrl, LOCAL_STORAGE_TOKEN_NAME } from '../../contexts/constants';\nimport { DepartmentContext } from '../../contexts/DepartmentContext';\nimport { useContext } from 'react';\nimport { Tooltip, Typography, Alert } from '@mui/material';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TablePaginationActions(props) {\n  _s();\n  const theme = useTheme();\n  const {\n    count,\n    page,\n    rowsPerPage,\n    onPageChange\n  } = props;\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexShrink: 0,\n      ml: 2.5\n    },\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleFirstPageButtonClick,\n      disabled: page === 0,\n      \"aria-label\": \"first page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(LastPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(FirstPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 65\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleBackButtonClick,\n      disabled: page === 0,\n      \"aria-label\": \"previous page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 71\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleNextButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": \"next page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 70\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleLastPageButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": \"last page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(FirstPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(LastPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 66\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(TablePaginationActions, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n_c = TablePaginationActions;\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\n\n// function createData(name, owner, des) {\n//     return { name, owner, des };\n// }\n// const rows = [\n//     createData('Computing', \"email1@gmail.com\", 'Day la description'),\n//     createData('Computing', \"email2@gmail.com\", 'Day la description'),\n//     createData('Computing', \"email2@gmail.com\", 'Day la description'),\n//     createData('Computing', \"email2@gmail.com\", 'Day la description'),\n//     createData('Computing', \"email2@gmail.com\", 'Day la description'),\n// ].sort((a, b) => (a.name < b.name ? -1 : 1));\n\nexport default function Department() {\n  _s2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const navigate = useNavigate();\n\n  //context\n  const {\n    departSate: {\n      departments,\n      departmentsLoading\n    },\n    getAllDepartments,\n    deleteDepart\n  } = useContext(DepartmentContext);\n  React.useEffect(() => getAllDepartments(), []);\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - departments.length) : 0;\n  // Avoid a layout jump when reaching the last page with empty rows.\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const removeDepartment = async (_id, nameDepart) => {\n    // confirmAlert({\n    //     title: 'Confirm to Delete',\n    //     message: 'Are you sure to delete ' + nameDepart,\n    //     buttons: [\n    //         {\n    //             label: 'Yes',\n    //             onClick: () => deleteDepart(_id)\n\n    //         },\n    //         {\n    //             label: 'No',\n    //             onClick: () => getAllDepartments()\n    //         },\n    //     ]\n    // });\n    if (removeDepartment) {\n      alert(\"Detele deparment \" + nameDepart);\n      const message = await deleteDepart(_id);\n      getAllDepartments();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"Department Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: 'flex',\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => navigate('/home/new-department'),\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Add new department\",\n            children: /*#__PURE__*/_jsxDEV(AddCircleIcon, {\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Add new department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      elevation: 12,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {},\n        \"aria-label\": \"custom pagination table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name Department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Owner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: [(rowsPerPage > 0 ? departments.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : departments).map(data => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: data.name_department\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: data.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: data.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => navigate(`/home/update-department/${data._id}`),\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                  fontSize: \"large\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => removeDepartment(data._id, data.name_department),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                  fontSize: \"large\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 33\n            }, this)]\n          }, data._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this)), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n            style: {\n              height: 53 * emptyRows\n            },\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: 6\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TablePagination, {\n              rowsPerPageOptions: [5, 10, 25, {\n                label: 'All',\n                value: -1\n              }],\n              count: departments.length,\n              rowsPerPage: rowsPerPage,\n              page: page,\n              SelectProps: {\n                inputProps: {\n                  'aria-label': 'rows per page'\n                },\n                native: true\n              },\n              onPageChange: handleChangePage,\n              onRowsPerPageChange: handleChangeRowsPerPage,\n              ActionsComponent: TablePaginationActions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 9\n  }, this);\n}\n_s2(Department, \"o4Zq1vKXaIQrGh28YA9b9EBVlTk=\", false, function () {\n  return [useNavigate];\n});\n_c2 = Department;\nvar _c, _c2;\n$RefreshReg$(_c, \"TablePaginationActions\");\n$RefreshReg$(_c2, \"Department\");","map":{"version":3,"names":["React","PropTypes","useTheme","Box","Table","TableBody","TableCell","TableContainer","TableFooter","TablePagination","TableRow","Paper","TableHead","IconButton","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","EditIcon","DeleteIcon","AddCircleIcon","Outlet","useNavigate","apiUrl","LOCAL_STORAGE_TOKEN_NAME","DepartmentContext","useContext","Tooltip","Typography","Alert","confirmAlert","jsxDEV","_jsxDEV","TablePaginationActions","props","_s","theme","count","page","rowsPerPage","onPageChange","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","sx","flexShrink","ml","children","onClick","disabled","direction","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","number","isRequired","func","Department","_s2","setPage","useState","setRowsPerPage","navigate","departSate","departments","departmentsLoading","getAllDepartments","deleteDepart","useEffect","emptyRows","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","removeDepartment","_id","nameDepart","alert","message","variant","display","alignItems","title","fontSize","component","elevation","align","slice","map","data","name_department","email","description","style","height","colSpan","rowsPerPageOptions","label","SelectProps","inputProps","native","onRowsPerPageChange","ActionsComponent","_c2","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/FrontEnd/src/components/DepartmentsManagement/DepartmentsManagement.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableFooter from '@mui/material/TableFooter';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport TableHead from '@mui/material/TableHead';\nimport IconButton from '@mui/material/IconButton';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport { Outlet, useNavigate } from 'react-router-dom';\nimport { apiUrl, LOCAL_STORAGE_TOKEN_NAME } from '../../contexts/constants';\n\n\nimport { DepartmentContext } from '../../contexts/DepartmentContext'\nimport { useContext } from 'react';\n\nimport { Tooltip, Typography, Alert } from '@mui/material';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\n\nfunction TablePaginationActions(props) {\n    const theme = useTheme();\n    const { count, page, rowsPerPage, onPageChange } = props;\n\n    const handleFirstPageButtonClick = (event) => {\n        onPageChange(event, 0);\n    };\n\n    const handleBackButtonClick = (event) => {\n        onPageChange(event, page - 1);\n    };\n\n    const handleNextButtonClick = (event) => {\n        onPageChange(event, page + 1);\n    };\n\n    const handleLastPageButtonClick = (event) => {\n        onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n    };\n\n    return (\n        <Box sx={{ flexShrink: 0, ml: 2.5 }}>\n            <IconButton\n                onClick={handleFirstPageButtonClick}\n                disabled={page === 0}\n                aria-label=\"first page\"\n            >\n                {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n            </IconButton>\n            <IconButton\n                onClick={handleBackButtonClick}\n                disabled={page === 0}\n                aria-label=\"previous page\"\n            >\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n            </IconButton>\n            <IconButton\n                onClick={handleNextButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"next page\"\n            >\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n            </IconButton>\n            <IconButton\n                onClick={handleLastPageButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"last page\"\n            >\n                {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n            </IconButton>\n        </Box>\n    );\n}\n\nTablePaginationActions.propTypes = {\n    count: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n};\n\n// function createData(name, owner, des) {\n//     return { name, owner, des };\n// }\n// const rows = [\n//     createData('Computing', \"email1@gmail.com\", 'Day la description'),\n//     createData('Computing', \"email2@gmail.com\", 'Day la description'),\n//     createData('Computing', \"email2@gmail.com\", 'Day la description'),\n//     createData('Computing', \"email2@gmail.com\", 'Day la description'),\n//     createData('Computing', \"email2@gmail.com\", 'Day la description'),\n// ].sort((a, b) => (a.name < b.name ? -1 : 1));\n\nexport default function Department() {\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n    const navigate = useNavigate()\n\n    //context\n    const { departSate: { departments, departmentsLoading, }, getAllDepartments, deleteDepart } = useContext(DepartmentContext)\n    React.useEffect(() => getAllDepartments(), [])\n\n\n\n    const emptyRows =\n        page > 0 ? Math.max(0, (1 + page) * rowsPerPage - departments.length) : 0;\n    // Avoid a layout jump when reaching the last page with empty rows.\n\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const removeDepartment = async (_id, nameDepart) => {\n        // confirmAlert({\n        //     title: 'Confirm to Delete',\n        //     message: 'Are you sure to delete ' + nameDepart,\n        //     buttons: [\n        //         {\n        //             label: 'Yes',\n        //             onClick: () => deleteDepart(_id)\n\n        //         },\n        //         {\n        //             label: 'No',\n        //             onClick: () => getAllDepartments()\n        //         },\n        //     ]\n        // });\n        if (removeDepartment) {\n            alert(\"Detele deparment \" + nameDepart)\n            const message = await deleteDepart(_id)\n            getAllDepartments()\n        }\n    }\n    return (\n        <Box>\n            <Box >\n                <Box>\n                    <Typography variant='h4'>\n                        Department Management\n                    </Typography>\n                </Box>\n                <Box display={'flex'} alignItems='center'>\n                    <IconButton onClick={() => navigate('/home/new-department')}>\n                        <Tooltip title=\"Add new department\">\n                            <AddCircleIcon fontSize='large' />\n                        </Tooltip>\n                    </IconButton>\n                    <Typography>\n                        Add new department\n                    </Typography>\n                </Box>\n            </Box>\n\n            <TableContainer component={Paper} elevation={12}>\n                <Table sx={{}} aria-label=\"custom pagination table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell >Name Department</TableCell>\n                            <TableCell align=\"center\">Owner</TableCell>\n                            <TableCell align=\"left\">Description</TableCell>\n                            <TableCell align=\"center\">Action</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {(rowsPerPage > 0\n                            ? departments.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            : departments\n                        ).map((data) => (\n                            <TableRow key={data._id}>\n                                <TableCell >{data.name_department}</TableCell>\n                                <TableCell align=\"center\">{data.email}</TableCell>\n                                <TableCell align=\"left\">{data.description}</TableCell>\n                                <TableCell align='center'>\n                                    <IconButton onClick={() => navigate(`/home/update-department/${data._id}`)} >\n                                        <EditIcon fontSize='large' />\n                                    </IconButton>\n                                    <IconButton onClick={() => removeDepartment(data._id, data.name_department)}>\n                                        <DeleteIcon fontSize='large' />\n                                    </IconButton>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                        {emptyRows > 0 && (\n\n                            <TableRow style={{ height: 53 * emptyRows }}>\n                                <TableCell colSpan={6} />\n                            </TableRow>\n                        )}\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow>\n                            <TablePagination\n                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                                count={departments.length}\n                                rowsPerPage={rowsPerPage}\n                                page={page}\n                                SelectProps={{\n                                    inputProps: {\n                                        'aria-label': 'rows per page',\n                                    },\n                                    native: true,\n                                }}\n                                onPageChange={handleChangePage}\n                                onRowsPerPageChange={handleChangeRowsPerPage}\n                                ActionsComponent={TablePaginationActions}\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </TableContainer>\n            <Outlet />\n        </Box>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}